{"version":3,"sources":["../../../src/docsmith/utils/settings.js"],"names":["debug","require","yaml","fs","path","id","x","local","join","process","cwd","p","repository","env","HOME","console","trace","resolve","config","config_path","map","existsSync","findIndex","safeLoad","readFileSync","integration","e","log","exit","settings_save","settings","writeFileSync","safeDump","define","name","value","Object","defineProperty","exports","enumerable","owner","repo","transform","branch","build","validate","instance","basename","argv","split","pkg_json","description","module","save"],"mappings":"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","file":"settings.js","sourcesContent":["const debug = require('debug')('docsmith');\nconst yaml = require('js-yaml');\nconst fs = require('fs');\nconst path = require('path');\n\nconst id = x => x;\nconst local = p => path.join(process.cwd(), p);\nconst repository = p => path.join(process.env.HOME, '.content', p);\n\ndebug('trace')\nconsole.trace()\n// Resolve content config file\nconst resolve = [local('content.yml'), local('_content.yml'), repository('content.yml')];\ndebug('resolve', resolve);\nlet config;\n\ntry {\n  // Get document, or throw exception on error\n  const config_path = resolve[resolve.map(fs.existsSync).findIndex(id)];\n\n  debug('resolve.map(fs.existsSync)', resolve.map(fs.existsSync));\n  debug('config_path', config_path);\n  if (config_path) {\n    config = yaml.safeLoad(fs.readFileSync(config_path, 'utf8'));\n    config.integration = config.integration || {};\n  } else {\n    debug('Cannot find content as code configuration.');\n    // console.log(\n    //   'Make sure to initialise your content repository or run this command from within a content as code project.'\n    // );\n  }\n} catch (e) {\n  console.log(e);\n  process.exit(1);\n}\n\nfunction settings_save(settings) {\n  try {\n    fs.writeFileSync('./_content.yml', yaml.safeDump(settings), 'utf8');\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n// Constants\n\nfunction define(name, value) {\n  Object.defineProperty(exports, name, {\n    value,\n    enumerable: true\n  });\n}\n\n// Defaults\n\ndefine('DEFAULT_GITHUB', {\n  owner: '',\n  repo: '',\n  transform: '',\n  path: '.'\n});\n\ndefine('DEFAULT_TRAVIS', {\n  branch: 'versions/*',\n  build: 'rake', // because of jekyll-travis for now.\n  validate: ['links']\n});\n\n// Brittle...\nconst instance = path.basename(process.argv[1]).split('-')[0];\ndebug('instance', instance)\nconst pkg_json = path.join(process.argv[1].split('/bin/')[0], 'lib/node_modules/', instance, 'package.json');\ndebug('pkg_json', pkg_json)\nconst description = require(pkg_json).description;\n\nmodule.exports.instance = instance;\nmodule.exports.description = description;\nmodule.exports.config = config;\nmodule.exports.save = settings_save;\n"]}