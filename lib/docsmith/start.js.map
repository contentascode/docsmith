{"version":3,"sources":["../../src/docsmith/start.js"],"names":["debug","require","realPath","realpathSync","path","fork","chalk","os","metalsmith","settings","pad","string","char","length","repeat","start","workspace","config","link","source","watch","clean","dbg","baseurl","workspaces","Object","keys","repository","join","process","env","HOME","base_toolkit","console","log","grey","description","instance","forEach","idx","destination","metadata","site","plugins","livereload","paths","document_root","homedir","port","verbose","redirects","err","exit","message","error","red","module","exports","run"],"mappings":"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","file":"start.js","sourcesContent":["const debug = require('debug')('docsmith:start');\n// const fs = require('fs-extra');\nconst realPath = require('fs').realpathSync;\n// const read = require('fs').readFileSync;\nconst path = require('path');\n// var npmi = require('npmi');\n// const yaml = require('js-yaml').safeLoad;\nconst fork = require('child_process').fork;\nconst chalk = require('chalk');\nconst os = require('os');\n// require('longjohn');\n\nconst metalsmith = require('./utils/metalsmith');\n\nconst settings = require('./utils/settings');\n\nconst pad = (string, char, length) => string + char.repeat(length - string.length);\n\nfunction start({ workspace, config, link = false, source, watch = false, clean = false, dbg = false, baseurl }) {\n  debug('link', link);\n  debug('source', source);\n  debug('baseurl', baseurl);\n  debug('dbg', dbg);\n  debug('clean', clean);\n  debug('settings.config', settings.config);\n\n  // TODO: hardwired for now.\n  const workspaces = workspace ? ['@safetag/' + workspace] : Object.keys(settings.config.workspace);\n\n  const repository = path.join(process.env.HOME, '.content');\n  const base_toolkit = realPath(path.join(repository, 'packages', 'safetag-toolkit'));\n\n  console.log(\n    '\\n' +\n      '\\n' +\n      chalk.grey('============================================================================') +\n      '\\n' +\n      chalk.grey('===========') +\n      '            ' +\n      pad((settings.description || settings.instance) + ' Starting', ' ', 42) +\n      chalk.grey('===========') +\n      '\\n' +\n      chalk.grey('============================================================================') +\n      '\\n' +\n      '\\n'\n  );\n\n  workspaces.forEach(function(workspace, idx) {\n    console.log('>> Starting workspace: ', path.join(base_toolkit, config.workspace[workspace].start));\n    console.log(\n      '>> Please wait about 5 seconds while the website is built and you see the message \"successfully built files.\"'\n    );\n    //TODO: Make watch more targeted.\n    //TODO: Maybe factor out webserver.\n\n    metalsmith(\n      path.join(base_toolkit, config.workspace[workspace].start),\n      {\n        ...(source ? { source } : null),\n        dbg,\n        clean,\n        destination: path.join(repository, 'build', workspace),\n        metadata: {\n          ...config.workspace[workspace].metadata,\n          site: { baseurl }\n        },\n        plugins: watch\n          ? [\n              {\n                'metalsmith-watch': {\n                  livereload: 35730 + idx,\n                  paths: {\n                    '${source}/**/*': '**/*.md',\n                    'code/assets/**/*': '**/*.md',\n                    'code/templates/*.pug': '**/*'\n                  }\n                }\n              },\n              {\n                'metalsmith-serve': {\n                  document_root: path.join(os.homedir(), '.content/build'),\n                  port: 8081 + idx,\n                  verbose: false,\n                  // http_error_files: {\n                  //   '404': '/404.html'\n                  // },\n                  redirects: {\n                    '/': workspace,\n                    '/searchMeta.json': '/' + workspace + '/searchMeta.json',\n                    '/searchIndex.json': '/' + workspace + '/searchIndex.json',\n                    '/debug-ui/data.json': '/' + workspace + '/debug-ui/data.json'\n                    // '/old_url.php?lang=en': '/en/new_url/'\n                  }\n                }\n              }\n            ]\n          : []\n      },\n      err => {\n        if (err) {\n          return exit('Error deploying' + workspace, err);\n        }\n        debug('>> Finished. ');\n      }\n    );\n  });\n}\n\nconst exit = (message, error) => {\n  {\n    console.log(chalk.red('\\n' + message + '\\n'));\n    if (error) console.log('error', error);\n    console.log(\n      chalk.grey('\\n==================================================================\\n\\n') +\n        chalk.red(\n          'Please alert the developer by submitting an issue \\nat https://github.com/contentascode/safetag/issues and copy the whole output of the command above.\\n\\nApologies for the inconvenience!\\n'\n        )\n    );\n    process.exit(1);\n  }\n};\n\nmodule.exports.run = start;\n"]}