{"version":3,"sources":["../../src/docsmith/start.js"],"names":["debug","require","realPath","realpathSync","path","fork","chalk","metalsmith","settings","pad","string","char","length","repeat","start","workspace","config","link","source","watch","dbg","workspaces","Object","keys","repository","join","process","env","HOME","base_toolkit","console","log","grey","description","instance","forEach","idx","destination","metadata","plugins","livereload","paths","document_root","port","verbose","redirects","err","exit","message","error","red","module","exports","run"],"mappings":"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","file":"start.js","sourcesContent":["const debug = require('debug')('docsmith:start');\n// const fs = require('fs-extra');\nconst realPath = require('fs').realpathSync;\n// const read = require('fs').readFileSync;\nconst path = require('path');\n// var npmi = require('npmi');\n// const yaml = require('js-yaml').safeLoad;\nconst fork = require('child_process').fork;\nconst chalk = require('chalk');\nrequire('longjohn');\n\nconst metalsmith = require('./utils/metalsmith');\n\nconst settings = require('./utils/settings');\n\nconst pad = (string, char, length) => string + char.repeat(length - string.length);\n\nfunction start({ workspace, config, link = false, source, watch = false, dbg = false }) {\n  debug('link', link);\n  debug('source', source);\n  debug('settings.config', settings.config);\n\n  // TODO: hardwired for now.\n  const workspaces = workspace ? ['@safetag/' + workspace] : Object.keys(settings.config.workspace);\n\n  const repository = path.join(process.env.HOME, '.content');\n  const base_toolkit = realPath(path.join(repository, 'packages', 'safetag-toolkit'));\n\n  console.log(\n    '\\n' +\n      '\\n' +\n      chalk.grey('============================================================================') +\n      '\\n' +\n      chalk.grey('===========') +\n      '            ' +\n      pad((settings.description || settings.instance) + ' Starting', ' ', 42) +\n      chalk.grey('===========') +\n      '\\n' +\n      chalk.grey('============================================================================') +\n      '\\n' +\n      '\\n'\n  );\n\n  workspaces.forEach(function(workspace, idx) {\n    console.log('>> Starting workspace: ', path.join(base_toolkit, config.workspace[workspace].start));\n\n    //TODO: Make watch more targeted.\n    //TODO: Maybe factor out webserver.\n\n    metalsmith(\n      path.join(base_toolkit, config.workspace[workspace].start),\n      {\n        ...(source ? { source } : null),\n        dbg,\n        destination: path.join(repository, 'build', workspace),\n        metadata: config.workspace[workspace].metadata,\n        plugins: watch\n          ? [\n              {\n                'metalsmith-watch': {\n                  livereload: 35730 + idx,\n                  paths: {\n                    '${source}/**/*': '**/*.md',\n                    'code/assets/**/*': '**/*.md',\n                    'code/templates/**/*': '**/*.md'\n                  }\n                }\n              },\n              {\n                'metalsmith-serve': {\n                  document_root: '/Users/jun/.content/build',\n                  port: 8081 + idx,\n                  verbose: true,\n                  // http_error_files: {\n                  //   '404': '/404.html'\n                  // },\n                  redirects: {\n                    '/': workspace,\n                    '/searchMeta.json': '/' + workspace + '/searchMeta.json',\n                    '/searchIndex.json': '/' + workspace + '/searchIndex.json',\n                    '/debug-ui/data.json': '/' + workspace + '/debug-ui/data.json'\n                    // '/old_url.php?lang=en': '/en/new_url/'\n                  }\n                }\n              }\n            ]\n          : []\n      },\n      err => {\n        if (err) {\n          return exit('Error deploying' + workspace, err);\n        }\n        debug('>> Finished. ');\n      }\n    );\n  });\n}\n\nconst exit = (message, error) => {\n  {\n    console.log(chalk.red('\\n' + message + '\\n'));\n    if (error) console.log('error', error);\n    console.log(\n      chalk.grey('\\n==================================================================\\n\\n') +\n        chalk.red(\n          'Please alert the developer by submitting an issue \\nat https://github.com/contentascode/safetag/issues and copy the whole output of the command above.\\n\\nApologies for the inconvenience!\\n'\n        )\n    );\n    process.exit(1);\n  }\n};\n\nmodule.exports.run = start;\n"]}