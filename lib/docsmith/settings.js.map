{"version":3,"sources":["../../src/docsmith/settings.js"],"names":["yaml","require","fs","path","id","x","local","join","process","cwd","p","repository","env","HOME","resolve","config_path","map","existsSync","findIndex","console","log","settings","safeLoad","readFileSync","integration","e","exit","settings_save","writeFileSync","safeDump","define","name","value","Object","defineProperty","exports","enumerable","owner","repo","transform","branch","build","validate","instance","basename","argv","split","module","save"],"mappings":";;AAAA,IAAIA,OAAOC,QAAQ,SAAR,CAAX;AACA,IAAIC,KAAKD,QAAQ,IAAR,CAAT;AACA,IAAIE,OAAOF,QAAQ,MAAR,CAAX;;AAEA,IAAIG,KAAK,SAALA,EAAK;AAAA,SAAKC,CAAL;AAAA,CAAT;AACA,IAAIC,QAAQ,SAARA,KAAQ;AAAA,SAAKH,KAAKI,IAAL,CAAUC,QAAQC,GAAR,EAAV,EAAyBC,CAAzB,CAAL;AAAA,CAAZ;AACA,IAAIC,aAAa,SAAbA,UAAa;AAAA,SAAKR,KAAKI,IAAL,CAAUC,QAAQI,GAAR,CAAYC,IAAtB,EAA4B,UAA5B,EAAwCH,CAAxC,CAAL;AAAA,CAAjB;;AAEA;AACA,IAAII,UAAU,CAACR,MAAM,aAAN,CAAD,EAAuBA,MAAM,cAAN,CAAvB,EAA8CK,WAAW,aAAX,CAA9C,CAAd;;AAEA,IAAI;AACF;AACA,MAAII,cAAcD,QAAQA,QAAQE,GAAR,CAAYd,GAAGe,UAAf,EAA2BC,SAA3B,CAAqCd,EAArC,CAAR,CAAlB;AACA,MAAI,CAACW,WAAL,EAAkB;AAChBI,YAAQC,GAAR,CAAY,4CAAZ;AACAD,YAAQC,GAAR,CACE,4GADF;AAGD;AACDD,UAAQC,GAAR,CAAYL,WAAZ;AACA,MAAIM,WAAWrB,KAAKsB,QAAL,CAAcpB,GAAGqB,YAAH,CAAgBR,WAAhB,EAA6B,MAA7B,CAAd,CAAf;AACAM,WAASG,WAAT,GAAuBH,SAASG,WAAT,IAAwB,EAA/C;AACD,CAZD,CAYE,OAAOC,CAAP,EAAU;AACVN,UAAQC,GAAR,CAAYK,CAAZ;AACAjB,UAAQkB,IAAR,CAAa,CAAb;AACD;;AAED,SAASC,aAAT,CAAuBN,QAAvB,EAAiC;AAC/B,MAAI;AACFnB,OAAG0B,aAAH,CAAiB,gBAAjB,EAAmC5B,KAAK6B,QAAL,CAAcR,QAAd,CAAnC,EAA4D,MAA5D;AACD,GAFD,CAEE,OAAOI,CAAP,EAAU;AACVN,YAAQC,GAAR,CAAYK,CAAZ;AACD;AACF;;AAED;;AAEA,SAASK,MAAT,CAAgBC,IAAhB,EAAsBC,KAAtB,EAA6B;AAC3BC,SAAOC,cAAP,CAAsBC,OAAtB,EAA+BJ,IAA/B,EAAqC;AACnCC,WAAOA,KAD4B;AAEnCI,gBAAY;AAFuB,GAArC;AAID;;AAED;;AAEAN,OAAO,gBAAP,EAAyB;AACvBO,SAAO,EADgB;AAEvBC,QAAM,EAFiB;AAGvBC,aAAW,EAHY;AAIvBpC,QAAM;AAJiB,CAAzB;;AAOA2B,OAAO,gBAAP,EAAyB;AACvBU,UAAQ,YADe;AAEvBC,SAAO,MAFgB,EAER;AACfC,YAAU,CAAC,OAAD;AAHa,CAAzB;;AAMA,IAAIC,WAAWxC,KAAKyC,QAAL,CAAcpC,QAAQqC,IAAR,CAAa,CAAb,CAAd,EAA+BC,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAAf;;AAEAC,OAAOZ,OAAP,CAAeQ,QAAf,GAA0BA,QAA1B;AACAI,OAAOZ,OAAP,CAAed,QAAf,GAA0BA,QAA1B;AACA0B,OAAOZ,OAAP,CAAea,IAAf,GAAsBrB,aAAtB","file":"settings.js","sourcesContent":["var yaml = require('js-yaml');\nvar fs = require('fs');\nvar path = require('path');\n\nvar id = x => x;\nvar local = p => path.join(process.cwd(), p);\nvar repository = p => path.join(process.env.HOME, '.content', p);\n\n// Resolve content config file\nvar resolve = [local('content.yml'), local('_content.yml'), repository('content.yml')];\n\ntry {\n  // Get document, or throw exception on error\n  var config_path = resolve[resolve.map(fs.existsSync).findIndex(id)];\n  if (!config_path) {\n    console.log('Cannot find content as code configuration.');\n    console.log(\n      'Make sure to initialise your content repository or run this command from within a content as code project.'\n    );\n  }\n  console.log(config_path);\n  var settings = yaml.safeLoad(fs.readFileSync(config_path, 'utf8'));\n  settings.integration = settings.integration || {};\n} catch (e) {\n  console.log(e);\n  process.exit(1);\n}\n\nfunction settings_save(settings) {\n  try {\n    fs.writeFileSync('./_content.yml', yaml.safeDump(settings), 'utf8');\n  } catch (e) {\n    console.log(e);\n  }\n}\n\n// Constants\n\nfunction define(name, value) {\n  Object.defineProperty(exports, name, {\n    value: value,\n    enumerable: true\n  });\n}\n\n// Defaults\n\ndefine('DEFAULT_GITHUB', {\n  owner: '',\n  repo: '',\n  transform: '',\n  path: '.'\n});\n\ndefine('DEFAULT_TRAVIS', {\n  branch: 'versions/*',\n  build: 'rake', // because of jekyll-travis for now.\n  validate: ['links']\n});\n\nvar instance = path.basename(process.argv[1]).split('-')[0];\n\nmodule.exports.instance = instance;\nmodule.exports.settings = settings;\nmodule.exports.save = settings_save;\n"]}