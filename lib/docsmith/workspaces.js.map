{"version":3,"sources":["../../src/docsmith/workspaces.js"],"names":["debug","require","async","realPath","realpathSync","path","metalsmith","deploy","workspaces","repository","done","reduce","memo","callback","name","workspace","base","join","eachOfSeries","cb","init","console","log","process","cwd","destination","err","results","module","exports"],"mappings":";;AAAA,IAAMA,QAAQC,QAAQ,OAAR,EAAiB,eAAjB,CAAd;AACA,IAAMC,QAAQD,QAAQ,OAAR,CAAd;AACA,IAAME,WAAWF,QAAQ,IAAR,EAAcG,YAA/B;AACA,IAAMC,OAAOJ,QAAQ,MAAR,CAAb;AACA,IAAMK,aAAaL,QAAQ,oBAAR,CAAnB;;AAEA,IAAMM,SAAS,SAASA,MAAT,CAAgBC,UAAhB,EAA4BC,UAA5B,EAAwCC,IAAxC,EAA8C;AAC3D;AACA;AACA;AACAR,QAAMS,MAAN,CACEH,UADF,EAEE,EAFF,EAGE,UAACI,IAAD,QAA4BC,QAA5B,EAAyC;AAAA,QAAhCC,IAAgC,QAAhCA,IAAgC;AAAA,QAA1BC,SAA0B,QAA1BA,SAA0B;;AACvC;AACA;AACA;AACA,QAAMC,OAAOb,SAASE,KAAKY,IAAL,CAAUR,UAAV,EAAsB,cAAtB,EAAsCK,IAAtC,CAAT,CAAb;AACA;AACAZ,UAAMgB,YAAN,CACEH,SADF,EAEE,iBAAWD,IAAX,EAAiBK,EAAjB,EAAwB;AAAA,UAArBC,IAAqB,SAArBA,IAAqB;;AACtB;AACA;AACA;AACA,UAAI,CAACA,IAAL,EAAW,OAAOD,IAAP;AACXE,cAAQC,GAAR,CAAY,0BAAZ,EAAwCR,IAAxC;AACAd,YAAM,eAAN,EAAuBuB,QAAQC,GAAR,EAAvB;AACAlB,iBAAWD,KAAKY,IAAL,CAAUD,IAAV,EAAgBI,IAAhB,CAAX,EAAkC,EAAEK,aAAapB,KAAKY,IAAL,CAAUM,QAAQC,GAAR,EAAV,EAAyBV,IAAzB,CAAf,EAAlC,EAAmF,eAAO;AACxF,YAAIY,GAAJ,EAAS;AACPL,kBAAQC,GAAR,CAAY,iBAAZ,EAA+BR,IAA/B;AACA,iBAAOK,GAAGO,GAAH,CAAP;AACD;AACDL,gBAAQC,GAAR,CAAY,yBAAZ,EAAuCR,IAAvC;;AAEAK;AACD,OARD;AASD,KAlBH,EAmBEN,QAnBF;AAqBD,GA9BH,EA+BE,UAACa,GAAD,EAAMC,OAAN,EAAkB;AAChB,QAAID,GAAJ,EAAS,OAAOhB,KAAKgB,GAAL,CAAP;AACThB,SAAK,IAAL,EAAWiB,OAAX;AACD,GAlCH;AAoCD,CAxCD;;AA0CAC,OAAOC,OAAP,CAAetB,MAAf,GAAwBA,MAAxB","file":"workspaces.js","sourcesContent":["const debug = require('debug')('docsmith:init');\nconst async = require('async');\nconst realPath = require('fs').realpathSync;\nconst path = require('path');\nconst metalsmith = require('./utils/metalsmith');\n\nconst deploy = function deploy(workspaces, repository, done) {\n  // console.log('workspaces', workspaces);\n  // console.log('repository', repository);\n  // console.log('pwd', process.cwd());\n  async.reduce(\n    workspaces,\n    [],\n    (memo, { name, workspace }, callback) => {\n      // This should execute the init script of the workspace\n      // via metalsmith programmatically with the .content folder as source and\n      // the destination in pwd.\n      const base = realPath(path.join(repository, 'node_modules', name));\n      // console.log('base', base);\n      async.eachOfSeries(\n        workspace,\n        ({ init }, name, cb) => {\n          // Skip if there isn't an init script in the workspace configuration.\n          // console.log('init', init);\n          // console.log('name', name);\n          if (!init) return cb();\n          console.log('>> Deploying workspace: ', name);\n          debug('process.cwd()', process.cwd());\n          metalsmith(path.join(base, init), { destination: path.join(process.cwd(), name) }, err => {\n            if (err) {\n              console.log('Error deploying', name);\n              return cb(err);\n            }\n            console.log('>> Finished deploying: ', name);\n\n            cb();\n          });\n        },\n        callback\n      );\n    },\n    (err, results) => {\n      if (err) return done(err);\n      done(null, results);\n    }\n  );\n};\n\nmodule.exports.deploy = deploy;\n"]}