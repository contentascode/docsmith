{"version":3,"sources":["../src/docsmith-install.js"],"names":["_","require","program","templates","settings","yaml","fs","path","exec","execFile","id","x","cp","git","curSettings","component","gh_token","description","option","arguments","action","comp","plug","options","test","plugin","parse","process","argv","newSettings","force","console","log","exit","integrate","TRUE","travis","DEFAULT_TRAVIS","env","GH_TOKEN","create_travis_yml","then","jekyll_config","npm_build","catch","reason","DEFAULT_GITHUB_PAGES","install_integration","save","Promise","resolve","reject","travis_yml","safeLoad","readFileSync","join","git_name","git_email","promise_name","Config","openDefault","config","getString","err","promise_email","all","values","token","GIT_NAME","GIT_EMAIL","global","push","GH_USERNAME","CONFIG_OWNER","CONFIG_REPO","offline","stdout","execSync","toString","secure","e","writeFileSync","safeDump","src","dest","load_npm_build_yaml","read_package_json","check_package_json","stat","stats","isFile","promiseFromChildProcess","child","addListener","exists","readFile","data","pkg","JSON","author","write_package_json","val","writeFile","stringify","merge","_config","code","url","baseurl","github","repository_url"],"mappings":"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","file":"docsmith-install.js","sourcesContent":["\n\n/**\n * Module dependencies.\n */\n\nconst _ = require('lodash');\nconst program = require('commander');\nconst templates = require('./docsmith/templates');\nconst settings = require('./docsmith/utils/settings');\n// const components = require('../components');\nconst yaml = require('js-yaml');\nconst fs = require('fs-extra');\nconst path = require('path');\nconst exec = require('child_process').execFile;\n\nconst id = x => x;\nconst cp = require('child_process');\nconst git = require('nodegit');\n\nconst curSettings = settings.settings;\n\nlet component, gh_token;\n\nprogram\n  .description('install one or more components with their default settings or a specific plugin')\n  .option('-f, --force', 'Initialise whether the current directory is empty or not.', id, false)\n  .option('--git-name <git_name>', 'Overrides the current git user name or GIT_NAME env variable for the travis plugin')\n  .option('--git-email <git_email>', 'Overrides the current git email or GIT_EMAIL env variablefor the travis plugin')\n  .option('--gh-token <github_token>', 'Overrides GH_TOKEN env variable for the travis plugin')\n  .option('--test', 'Bypasses specific tasks for test runs')\n  .arguments('[component] [plugin]')\n  .action(function(comp, plug, options) {\n    // Temporary fix for https://github.com/tj/commander.js/issues/508\n    if (options.test && plug) {\n      plugin = comp;\n      component = plug;\n    } else {\n      component = comp;\n      plugin = plug;\n    }\n  })\n  .parse(process.argv);\n\nlet newSettings, plugin;\n\nif (!program.force) {\n  console.log('EXPERIMENTAL -  This is probably not working. Use --force to bypass this warning.');\n  process.exit(0);\n}\n\nif (!curSettings.integrate) curSettings.integrate = {};\n\nswitch (component) {\n  case 'travis': {\n    // TODO: Check if there are any needed updates. This should probably just be a call to a trusted build system\n    // For now just rerun configuration creation all the time.\n\n    // if (!(plugin in curSettings.integration)) {\n    const TRUE = true;\n    if (TRUE) {\n      curSettings.integrate.travis = settings.DEFAULT_TRAVIS;\n\n      if (!program.gh_token) {\n        if (!process.env.GH_TOKEN && !program.test) {\n          console.log('Travis requires a Github Authentication Token in order to publish your website to Github Pages');\n          console.log('The GH_TOKEN environment variable needs to be set, or the --gh-token option needs to be used.');\n          process.exit(1);\n        } else {\n          gh_token = process.env.GH_TOKEN;\n        }\n      } else {\n        gh_token = program.gh_token;\n      }\n\n      // Install and check necessary files - .travis.yml\n      //\n      // For now this is a blend of trying to generate files, do idempotent file check a la ansible\n      // and just copying template files.\n      //\n      // Later for moving between configurations, things might be different. Using npm build for now.\n      //\n      // Maybe this should be parameterised to be able to change build system and compose different components.\n      // One of the big factors is if there is a linear build pipe a la metalsmith, or if we have a tree which will\n      // necessitate more of a Make or equivalent approach.\n\n      create_travis_yml(gh_token)\n        .then(jekyll_config('../components/travis/_config.yml', '_config.yml'))\n        .then(npm_build('../components/travis/npm_build.yml', 'package.json'))\n        .then(function() {\n          console.log('You have just installed travis');\n          console.log('You will need to:');\n          console.log(' - Push this folder to your repo (soon with `content save`)');\n          console.log(' - Activate travis for your repository');\n        })\n        .catch(\n          // Log the rejection reason\n          function(reason) {\n            console.log('Problem installing the travis build component');\n            console.log(reason);\n            process.exit(1);\n          }\n        );\n\n      newSettings = curSettings;\n    }\n\n    break;\n  }\n  case 'github-pages': {\n    if (!(plugin in curSettings.integrate)) {\n      curSettings.integrate.travis = settings.DEFAULT_GITHUB_PAGES;\n      newSettings = curSettings;\n    }\n    break;\n  }\n  case 'validate': {\n    switch (plugin) {\n      case 'links': {\n        console.log('Not implemented yet');\n        process.exit();\n        break;\n      }\n      default: {\n        if (curSettings.integrate == {}) {\n          console.log('Current integration plugin configuration is');\n          console.log(curSettings.integrate);\n          process.exit();\n        } else {\n          console.log(\n            'No integration plugin currently installed. Please specify a plugin to install a build component.'\n          );\n          console.log('For instance to enable the travis plugin use :');\n          console.log('$ content install travis');\n          process.exit();\n        }\n      }\n    }\n    const install_integration = () => {\n      //TODO\n      return;\n    };\n    newSettings = install_integration(plugin, gh_token, curSettings);\n    break;\n  }\n  // default:\n  //   console.log('%s is not a known component.', component);\n  //   process.exit();\n}\n\n// update settings file.\n\nif (newSettings) {\n  settings.save(newSettings);\n  console.log('Saved new component');\n  //console.log(newSettings.integration)\n} else {\n  // TODO Check that currently installed plugin configuration is sane.\n  console.log('No modifications. Current settings are');\n  console.log(curSettings);\n}\n\nfunction create_travis_yml(gh_token) {\n  return new Promise(function(resolve, reject) {\n    // This builds the yaml in memory including the secure token and writes the file\n    // It could also use a moustache style template in integration/travis/.travis.yml\n\n    // TODO: Refactor to separate file merge from token generation. Use Object.assign approach like for npm_build.\n\n    const travis_yml = yaml.safeLoad(\n      fs.readFileSync(path.join(templates.path, '../components/travis/.travis.yml'), 'utf8')\n    );\n\n    let git_name, git_email;\n\n    const promise_name = git.Config\n      .openDefault()\n      .then(function(config) {\n        return config.getString('user.name');\n      })\n      .catch(function(err) {\n        console.log('Problem with git configuration. Have set your user.email? You can use:');\n        console.log(\"git config user.name 'Your Name'\");\n        console.log(err);\n      });\n\n    const promise_email = git.Config\n      .openDefault()\n      .then(function(config) {\n        return config.getString('user.email');\n      })\n      .catch(function(err) {\n        console.log('Problem with git configuration. Have set your user.email? You can use:');\n        console.log(\"git config user.email 'you@email.net'\");\n        console.log(err);\n      });\n\n    return Promise.all([promise_name, promise_email])\n      .then(function(values) {\n        let token = 'TOKEN';\n\n        git_name = process.env.GIT_NAME || values[0];\n        git_email = process.env.GIT_EMAIL || values[1];\n\n        travis_yml.env.global = [];\n\n        travis_yml.env.global.push('GH_USERNAME=' + process.env.GH_USERNAME);\n        travis_yml.env.global.push('CONFIG_OWNER=' + process.env.CONFIG_OWNER);\n        travis_yml.env.global.push('CONFIG_REPO=' + process.env.CONFIG_REPO);\n\n        // Generate the travis encrypted variable to access Github.\n        try {\n          if (!curSettings.offline && !program.test) {\n            //console.log(\"travis encrypt \\'GIT_NAME=\\\"\" + git_name + \"\\\" GIT_EMAIL=\\\"\" + git_email + \"\\\" GH_TOKEN=\\\"\" + gh_token + \"\\\"\\'\")\n            const stdout = cp.execSync(\n              'travis encrypt \\'GIT_NAME=\"' + git_name + '\" GIT_EMAIL=\"' + git_email + '\" GH_TOKEN=\"' + gh_token + '\"\\''\n            );\n            token = stdout.toString();\n          }\n          travis_yml.env.global.push({ secure: token });\n          resolve();\n        } catch (e) {\n          console.log(\n            'You need to have a working ruby environment and have installed the travis gem with `gem install travis`'\n          );\n          reject(e);\n        }\n\n        // write the .travis.yml file.\n        try {\n          fs.writeFileSync('./.travis.yml', yaml.safeDump(travis_yml), 'utf8');\n          resolve();\n        } catch (e) {\n          reject(e);\n        }\n      })\n      .catch(function(err) {\n        console.log(err);\n      });\n  });\n}\n\n// function lineinfile(dest, line) {\n//   return new Promise(function(resolve, reject) {\n//     // mimicking ansible lineinfile module API with state=present\n//     fs.readFile(dest, function(err, data) {\n//       if (err) reject(err);\n//       if (data.toString().indexOf(line) > -1) {\n//         // Should use ansible regexp feature to deal with versions.\n//         resolve();\n//       } else {\n//         fs.appendFile(dest, '\\n' + line, function(err) {\n//           if (err) reject();\n//           console.log(dest + ' ' + line + ' added.');\n//           resolve();\n//         });\n//       }\n//     });\n//   });\n// }\n\nfunction npm_build(src, dest) {\n  const load_npm_build_yaml = new Promise(function(resolve) {\n    resolve(yaml.safeLoad(fs.readFileSync(path.join(templates.path, src), 'utf8')));\n  });\n\n  const read_package_json = function(yaml) {\n    const check_package_json = new Promise(function(resolve, reject) {\n      fs.stat(dest, function(err, stats) {\n        if (err) {\n          resolve(false);\n        } else if (stats.isFile()) {\n          resolve(true);\n        } else {\n          reject(dest + ' is not a file');\n        }\n      });\n    });\n\n    return new Promise(function(resolve, reject) {\n      function promiseFromChildProcess(child) {\n        return new Promise(function(resolve, reject) {\n          child.addListener('error', reject);\n          child.addListener('exit', resolve);\n        });\n      }\n\n      const child = exec('npm', ['init', '-f'], { env: process.env });\n\n      // promiseFromChildProcess(child).then(function (result) {\n      //     console.log('promise complete: ' + result);\n      // }, function (err) {\n      //     console.log('promise rejected: ' + err);\n      // });\n\n      // child.stdout.on('data', function (data) {\n      //     console.log('stdout: ' + data);\n      // });\n      // child.stderr.on('data', function (data) {\n      //     console.log('stderr: ' + data);\n      // });\n      // child.on('close', function (code) {\n      //     console.log('closing code: ' + code);\n      // });\n\n      return check_package_json\n        .then(exists => {\n          if (!exists) {\n            // console.log(dest + ': does not exist!')\n            return promiseFromChildProcess(child);\n          }\n        })\n        .then(() => {\n          fs.readFile(dest, function(err, data) {\n            if (err) reject(err);\n            console.log(dest + ': exists!');\n            const pkg = JSON.parse(data.toString());\n            pkg.author = pkg.author || 'Unknown';\n            resolve([yaml, pkg]);\n          });\n        });\n    });\n  };\n\n  // Not using bluebird and spread yet...\n  const write_package_json = function(val) {\n    return new Promise(function(resolve, reject) {\n      fs.writeFile(dest, JSON.stringify(_.merge(val[1], val[0]), null, '  '), 'utf8', function(err) {\n        if (err) reject(err);\n        console.log(dest + ' updated');\n        resolve();\n      });\n    });\n  };\n\n  return load_npm_build_yaml.then(read_package_json).then(write_package_json);\n}\n\nfunction jekyll_config(src, dest) {\n  return new Promise(function(resolve, reject) {\n    const jekyll_config = yaml.safeLoad(fs.readFileSync(path.join(templates.path, src), 'utf8'));\n\n    fs.readFile(dest, function(err, data) {\n      let _config = {};\n      if (err) {\n        if (err.code != 'ENOENT') {\n          reject(err);\n          return;\n        }\n      } else {\n        _config = yaml.safeLoad(data.toString());\n      }\n\n      jekyll_config.url = 'http://' + process.env.CONFIG_OWNER + '.github.io';\n      jekyll_config.baseurl = '/' + process.env.CONFIG_REPO;\n      jekyll_config.github.repository_url =\n        'https://github.com/' + process.env.CONFIG_OWNER + '/' + process.env.CONFIG_REPO;\n\n      fs.writeFile(dest, yaml.safeDump(_.merge(_config, jekyll_config), null, '  '), 'utf8', function(err) {\n        if (err) reject(err);\n        console.log(dest + ' updated');\n        resolve();\n      });\n    });\n  });\n}\n\n// function copyfile(src, dest) {\n//   // fs.copySync(path.join(templates.path, src), path.join(process.cwd(), src));\n//\n//   return new Promise(function(resolve, reject) {\n//     fs.copy(path.join(templates.path, src), path.join(process.cwd(), dest), function(err) {\n//       if (err) reject(err);\n//       console.log(path.join(templates.path, src) + ' copied in ' + path.join(process.cwd(), src));\n//       resolve();\n//     });\n//   });\n// }\n"]}