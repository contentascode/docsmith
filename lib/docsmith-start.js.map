{"version":3,"sources":["../src/docsmith-start.js"],"names":["debug","require","program","start","config","workspace","arguments","option","action","wksp","parse","process","argv","link","source","baseurl","watch","clean","dbg","run","console","warn"],"mappings":";;AAEA;;;;AAIA,IAAMA,QAAQC,QAAQ,OAAR,EAAiB,gBAAjB,CAAd;AACA,IAAMC,UAAUD,QAAQ,WAAR,CAAhB;AACA,IAAME,QAAQF,QAAQ,kBAAR,CAAd;AACA,IAAMG,SAASH,QAAQ,2BAAR,EAAqCG,MAApD;;AAEA,IAAIC,kBAAJ;;AAEAH,QACGI,SADH,CACa,aADb,EAEGC,MAFH,CAEU,qBAFV,EAEiC,+BAFjC,EAGGA,MAHH,CAGU,qBAHV,EAGiC,kCAHjC,EAIGA,MAJH,CAIU,gBAJV,EAI4B,4EAJ5B,EAKGA,MALH,CAKU,aALV,EAKyB,8CALzB,EAMGA,MANH,CAMU,aANV,EAMyB,uCANzB,EAOGA,MAPH,CAOU,YAPV,EAOwB,gDAPxB,EAQGC,MARH,CAQU,UAASC,IAAT,EAAe;AACrBJ,cAAYI,IAAZ;AACD,CAVH;;AAYAP,QAAQQ,KAAR,CAAcC,QAAQC,IAAtB;;IAEQC,I,GAAoDX,O,CAApDW,I;IAAMC,M,GAA8CZ,O,CAA9CY,M;IAAQC,O,GAAsCb,O,CAAtCa,O;IAASC,K,GAA6Bd,O,CAA7Bc,K;IAAOC,K,GAAsBf,O,CAAtBe,K;IAAcC,G,GAAQhB,O,CAAfF,K;;;AAE7C,IAAI,OAAOK,SAAP,KAAqB,WAAzB,EAAsCA,YAAY,SAAZ;;AAEtC;AACA,IAAID,MAAJ,EAAY;AACVJ,QAAM,QAAN,EAAgBI,MAAhB;AACA;AACAD,QAAMgB,GAAN,CAAU,EAAEd,SAAF,EAAaD,MAAb,EAAqBS,IAArB,EAA2BC,MAA3B,EAAmCE,KAAnC,EAA0CC,KAA1C,EAAiDC,GAAjD,EAAsDH,OAAtD,EAAV;AACD,CAJD,MAIO;AACLK,UAAQC,IAAR,CAAa,qEAAb;AACD","file":"docsmith-start.js","sourcesContent":["\n\n/**\n * Module dependencies.\n */\n\nconst debug = require('debug')('docsmith:start');\nconst program = require('commander');\nconst start = require('./docsmith/start');\nconst config = require('./docsmith/utils/settings').config;\n\nlet workspace;\n\nprogram\n  .arguments('[workspace]')\n  .option('-s, --source [path]', '[migrate] Source folder path]')\n  .option('--baseurl [baseurl]', 'Set site.baseurl metadata value.')\n  .option('-n, --no-watch', 'Do not watch content folder and serve on local server. Watches by default.')\n  .option('-d, --debug', 'Enable /debug-ui url for debugging pipeline.')\n  .option('-c, --clean', 'Cleanup build directory before build.')\n  .option('-l, --link', 'For development purposes. Link local packages.')\n  .action(function(wksp) {\n    workspace = wksp;\n  });\n\nprogram.parse(process.argv);\n\nconst { link, source, baseurl, watch, clean, debug: dbg } = program;\n\nif (typeof workspace === 'undefined') workspace = 'toolkit';\n\n// check if we could resolve the config.\nif (config) {\n  debug('config', config);\n  // called from a content as code instance, initialise from the instance configuration\n  start.run({ workspace, config, link, source, watch, clean, dbg, baseurl });\n} else {\n  console.warn('Could not find config. Aborting start. Please contact the developer');\n}\n"]}