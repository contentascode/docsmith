{"version":3,"sources":["../src/docsmith-start.js"],"names":["debug","require","program","start","config","workspace","arguments","option","action","wksp","parse","process","argv","link","source","baseurl","watch","dbg","run","console","warn"],"mappings":";;AAEA;;;;AAIA,IAAMA,QAAQC,QAAQ,OAAR,EAAiB,gBAAjB,CAAd;AACA,IAAMC,UAAUD,QAAQ,WAAR,CAAhB;AACA,IAAME,QAAQF,QAAQ,kBAAR,CAAd;AACA,IAAMG,SAASH,QAAQ,2BAAR,EAAqCG,MAApD;;AAEA,IAAIC,kBAAJ;;AAEAH,QACGI,SADH,CACa,aADb,EAEGC,MAFH,CAEU,qBAFV,EAEiC,+BAFjC,EAGGA,MAHH,CAGU,qBAHV,EAGiC,kCAHjC,EAIGA,MAJH,CAIU,aAJV,EAIyB,iDAJzB,EAKGA,MALH,CAKU,aALV,EAKyB,8CALzB,EAMGA,MANH,CAMU,aANV,EAMyB,2DANzB,EAOGA,MAPH,CAOU,YAPV,EAOwB,gDAPxB,EAQGC,MARH,CAQU,UAASC,IAAT,EAAe;AACrBJ,cAAYI,IAAZ;AACD,CAVH,EAWGC,KAXH,CAWSC,QAAQC,IAXjB;;IAaQC,I,GAA6CX,O,CAA7CW,I;IAAMC,M,GAAuCZ,O,CAAvCY,M;IAAQC,O,GAA+Bb,O,CAA/Ba,O;IAASC,K,GAAsBd,O,CAAtBc,K;IAAcC,G,GAAQf,O,CAAfF,K;;AAEtC;;AACA,IAAII,MAAJ,EAAY;AACVJ,QAAM,QAAN,EAAgBI,MAAhB;AACA;AACAD,QAAMe,GAAN,CAAU,EAAEb,SAAF,EAAaD,MAAb,EAAqBS,IAArB,EAA2BC,MAA3B,EAAmCE,KAAnC,EAA0CC,GAA1C,EAA+CF,OAA/C,EAAV;AACD,CAJD,MAIO;AACLI,UAAQC,IAAR,CAAa,qEAAb;AACD","file":"docsmith-start.js","sourcesContent":["\n\n/**\n * Module dependencies.\n */\n\nconst debug = require('debug')('docsmith:start');\nconst program = require('commander');\nconst start = require('./docsmith/start');\nconst config = require('./docsmith/utils/settings').config;\n\nlet workspace;\n\nprogram\n  .arguments('[workspace]')\n  .option('-s, --source [path]', '[migrate] Source folder path]')\n  .option('--baseurl [baseurl]', 'Set site.baseurl metadata value.')\n  .option('-w, --watch', 'Watch content folder and serve on local server.')\n  .option('-d, --debug', 'Enable /debug-ui url for debugging pipeline.')\n  .option('-f, --force', 'Initialise whether the current directory is empty or not.')\n  .option('-l, --link', 'For development purposes. Link local packages.')\n  .action(function(wksp) {\n    workspace = wksp;\n  })\n  .parse(process.argv);\n\nconst { link, source, baseurl, watch, debug: dbg } = program;\n\n// check if we could resolve the config.\nif (config) {\n  debug('config', config);\n  // called from a content as code instance, initialise from the instance configuration\n  start.run({ workspace, config, link, source, watch, dbg, baseurl });\n} else {\n  console.warn('Could not find config. Aborting start. Please contact the developer');\n}\n"]}